#############
Порядок работы с API
#############
API Контур.Реестро представляет собой HTTP сервис доступный по адресу /realty/v1/. 
Ниже представлены основные методы работы с API 

*************
Авторизация
*************

Для работы с методами API необходимо пройти авторизацию. 

Авторизация пользователя осуществляется  методом ``POST /auth``. ::

В тело метода должен быть помещен json запроса, в котором содержатся
    * login: логин пользователя
    * password: пароль пользователя
    * accountId: идентификатор аккаунта.

.. code-block:: bash 

        POST /realty/v1/auth HTTP/1.0
        Host: api.kontur.ru
        Content-Type: application/json
        {
        "login": "email@yandex.ru",
        "password": "123",
        "accountId": "5ee84ac0-eb9a-4b42-b814-2f5f7c27c255"
        }

**В случае успешной авторизации**::

API возвращает пользователю ответ: 200 OK, где в теле ответа указываются:
    * userId: идентификатор пользователя
    * sessionId: идентификатор сессии.
Идентификатор сессии должен быть представлен в заголовке Authorization при вызове методов API. Формат заголовка: ``Authorization: auth.sid <sessionId>``.

.. code-block:: bash

        HTTP/1.0 200 OK
        Content-Type: application/json
        {
        "userId": "5ee84ac0-eb9a-4b42-b814-2f5f7c27c255",
        "sessionId": "38f31d7246b148c8abcdf0e240a5e39d"
        }

**При неудачной авторизации**
    * возвращается код ответа 400 - если были введены неверные данные авторизации,
    * возвращается код ответа 403 - В случае, если для данного accountId доступ ограничен. 
    * возвращается код 401 - при запросе методов API в случае отсутствия заголовка Authorization или при некорректном значении последнего.


*************
Создание документооборота
*************

Создание документооборота осуществляется методом ``POST /docflows/{docflowType}``. 

    * docflowType –  тип документооборота.
API Ресстро предоставляет следующие типы документооборота

    * encumbrance_request_: регистрация обременения недвижимости 
    * object_request_: запрос выписки на объект недвижимости из ЕГРН 
    * additional_package_request_: запрос на отправку дополнительных файлов в Росреестр 


В тело метода должен быть помещен json запроса, в котором содержатся необходимые данные для инициализации документооборота. Json запроса состоит из

    * requestId - ID запроса 
    * options - параметров документооборота

        #. requestId - опциональный внешний идентификатор запроса клиента.
        #. options – параметры документооборота, которые определяют необходимую информацию для отправки запроса в Росреестр. Параметры документооборота зависят от его типа.

.. note::
        
        Описание типов документооборотов представлено отдельно

Пример создания документооборота представлены в описание 

**В случае успешного создания**

Пользователю возвращается

    *  идентификатор документооборота
    *  тип документооборота
    *  состояние документооборота.

+-----------------------------------------+---------------------------------------------------------------+
| **Если для ДО определены тербования**   | API возвращает код 201, ДО переходит в состояние "suspended"  | 
+-----------------------------------------+---------------------------------------------------------------+
| **Если для ДО не определены тербовани** | API возвращает код 201, ДО переходит в состояние "queued"     | 
+-----------------------------------------+---------------------------------------------------------------+

**При неудачном создании**

Пользователю возвращается код 400 с телом описание ошибки Error_ в формате json. 
Ошибка может возникнуть в случае, если был указан некорректный либо не полный набор данных (options).

.. code-block:: bash

        HTTP/1.0 400 Bad Request
        Content-Type: application/json
        {
          "code": "validation",
          "message": "Failed to validate input request",
          "target": "api",
          "errors": [{ 
            "code": "validation",
            "message": "must not be null",
            "target": "objectRequest.options.cadastralNumber"
          }]
        } 

*************
Актуализация состояния документооборота
*************


Документообороту могут быть присвоены следующие статусы:

    * queued: ожидает отправки
    * sent: отправлен в Росреестр
    * suspended: требуются дополнительные действия 
    * completed: исполнено
    * error: ошибка обработки
    * verified: верификация документооборота

Для получения информации о событиях, по документообороту необходимо периодически: вычитывать новости или запрашивать описание документооборота. 

===========
Вычитывание новостей
===========

Вычитывания новостей позволяет получить события по документооборотам, осуществляется методом GET /news?after={after}:
after: токен (lastToken) последнего обработанного события. Если не указан, то начиная с текущего момента времени.
Алгоритм вычитывания новостей:
Отправляем запрос без параметра after. В ответе получаем идентификатор lastToken, с которого будем продолжать вычитывание
Регистрируем один или несколько ДО на отправку.
Отправляем запрос, в котором параметр after принимает значение lastToken из предыдущего ответа (или идентификатор последней обработанной новости). Если появились новости с последнего запроса новостей, то ответ будет содержать описание новостей и новый идентификатор lastToken.
Если при обработке новостей случилась ошибка на стороне клиента, то клиент должен запомнить token последнего обработанного события и передать его в параметр запроса after, чтобы продолжить обработку новостей.
Пример:
 
GET /realty/v1/news?after=3254tsadf5 HTTP/1.0
Host: api.kontur.ru
Authorization: auth.sid 38f31d7246b148c8abcdf0e240a5e39d
 

В ответ возвращается список новостей по документооборотом и токен для продолжения вычитывания (см. DocflowNews).
Событие на изменение статуса документооборота (DocflowNewsItem) может содержать либо результат запроса в Росреестр (поле result), либо описание возникшей ошибки (поле error), либо описание действий, которые нужно совершить для продолжения обработки запроса (поле requirements). 



